Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  us/call  us/call  name    
100.00      0.01     0.01   254195     0.04     0.04  vrpSubRouteMove::printOn(std::ostream&) const
  0.00      0.01     0.00   186455     0.00     0.00  vrpSubRouteMove::Serialize(edaBuffer&, bool)
  0.00      0.01     0.00    63151     0.00     0.01  vrpConst::vrpConst(vrpConst::TYPE)
  0.00      0.01     0.00    62141     0.00     0.16  vrpConst::Serialize(edaBuffer&, bool)
  0.00      0.01     0.00    61487     0.00     0.00  vrpInterchangeNext::isFeasibleMove(vrpSolution*, vrpInterchangeMove*)
  0.00      0.01     0.00    60991     0.00     0.00  main
  0.00      0.01     0.00      501     0.00     0.01  vrpSolution::init()
  0.00      0.01     0.00      501     0.00     0.04  vrpConst::vrpConst(float const*, unsigned int)
  0.00      0.01     0.00      337     0.00     0.01  vrpRouteMove::Serialize(edaBuffer&, bool)
  0.00      0.01     0.00      337     0.00     0.00  vrpGroupConflict::isConflict(std::vector<unsigned int, std::allocator<unsigned int> > const&) const
  0.00      0.01     0.00      336     0.00     0.00  vrpSubRouteMove::update(edaSolution&) const
  0.00      0.01     0.00      334     0.00     0.00  edaSimpleMoveTabuList::Serialize(edaBuffer&, bool)
  0.00      0.01     0.00      331     0.00     0.00  vrpConst::vrpConst(vrpConst const&)
  0.00      0.01     0.00      179     0.00     0.00  vrpInterchangeNext::generate(edaMove*, edaSolution const&)
  0.00      0.01     0.00      177     0.00    56.13  vrpProblem::printTable(char const*)
  0.00      0.01     0.00      174     0.00     0.00  vrpSolution::writeCSVFile(char const*) const
  0.00      0.01     0.00      171     0.00     0.00  vrpRouteMove::~vrpRouteMove()
  0.00      0.01     0.00      170     0.00    11.22  vrpSolution::detail() const
  0.00      0.01     0.00      169     0.00     0.14  vrpSolution::getNextStop(vrpSubRoute&, unsigned int&) const
  0.00      0.01     0.00      168     0.00     0.00  vrpSolution::improveLandfill()
  0.00      0.01     0.00      168     0.00     0.00  vrpGroupConflict::vrpGroupConflict(unsigned int)
  0.00      0.01     0.00      167     0.00     0.00  vrpRouteMove::update(edaSolution&) const
  0.00      0.01     0.00      165     0.00     0.00  vrpConst::clone() const
  0.00      0.01     0.00      156     0.00     0.00  vrpSubRouteNext::generate(edaMove*, edaSolution const&)
  0.00      0.01     0.00      145     0.00     0.00  vrpInterchangeMove::Serialize(edaBuffer&, bool)
  0.00      0.01     0.00      143     0.00     0.00  vrpInterchangeMove::operator==(edaMove const&) const
  0.00      0.01     0.00      122     0.00     0.00  vrpInterchangeMove::operator=(edaMove const&)
  0.00      0.01     0.00       58     0.00     0.00  edaSA::search(edaSolutionList&)
  0.00      0.01     0.00       17     0.00     0.01  vrpRoute::Serialize(edaBuffer&, bool)
  0.00      0.01     0.00       17     0.00     0.01  std::vector<edaChromosome*, std::allocator<edaChromosome*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, edaChromosome* const&)
  0.00      0.01     0.00       14     0.00     0.00  vrpRoute::getClassID() const
  0.00      0.01     0.00       11     0.00     0.00  vrpInterchangeMove::init(edaSolution const&)
  0.00      0.01     0.00       10     0.00     4.58  edaWrapperControl::checkLoopStatus(int)
  0.00      0.01     0.00        9     0.00     0.10  vrpConst::load(char const*)
  0.00      0.01     0.00        8     0.00     8.58  userClassGenerate(int)
  0.00      0.01     0.00        8     0.00     0.00  vrpSolution::getRandomFirstStop(vrpStop*, double) const
  0.00      0.01     0.00        8     0.00     0.00  vrpSubRouteMove::incrEval(edaSolution const&) const
  0.00      0.01     0.00        6     0.00     0.00  vrpInterchangeMove::~vrpInterchangeMove()
  0.00      0.01     0.00        6     0.00    11.47  vrpInterchangeRand::isFeasibleMove(vrpSolution*, vrpInterchangeMove*)
  0.00      0.01     0.00        6     0.00     0.00  vrpRepresentation::init(edaSolutionList const&, edaPopulation&) const
  0.00      0.01     0.00        5     0.00     0.00  edaSA::edaSA(edaMove*, edaMoveGen*, edaContinue*, double, edaCoolingSchedule*, int, int)
  0.00      0.01     0.00        5     0.00     0.00  vrpRouteMove::printOn(std::ostream&) const
  0.00      0.01     0.00        5     0.00     0.00  edaPopulation::min() const
  0.00      0.01     0.00        5     0.00     0.00  edaPopulation::printOn(std::ostream&) const
  0.00      0.01     0.00        4     0.00    11.42  vrpSolution::createSubRoute(vrpStop*, double, double)
  0.00      0.01     0.00        4     0.00     0.00  vrpSolution::getBestFirstStop(vrpStop*, double) const
  0.00      0.01     0.00        4     0.00     0.00  std::vector<vrpRoute*, std::allocator<vrpRoute*> >::at(unsigned int)
  0.00      0.01     0.00        4     0.00     0.00  std::vector<unsigned int, std::allocator<unsigned int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int const&)
  0.00      0.01     0.00        3     0.00     0.00  global constructors keyed to _ZNK11edaSolution7printOnERSo
  0.00      0.01     0.00        3     0.00     3.82  vrpSubRoute::Serialize(edaBuffer&, bool)
  0.00      0.01     0.00        3     0.00     0.00  edaWrapperControl::chooseSolution(int, edaSolutionList&)
  0.00      0.01     0.00        3     0.00     0.00  vrpConst::operator=(vrpConst const&)
  0.00      0.01     0.00        3     0.00     0.00  edaSolution::printOn(std::ostream&) const
  0.00      0.01     0.00        3     0.00     0.00  edaPopulation::std() const
  0.00      0.01     0.00        3     0.00    11.95  vrpRepresentation::decode(edaChromosome const*, edaSolution*) const
  0.00      0.01     0.00        3     0.00     0.00  vrpRepresentation::encode(edaSolutionList const&, edaPopulation&) const
  0.00      0.01     0.00        3     0.00     0.00  vrpInterchangeRand::clone() const
  0.00      0.01     0.00        3     0.00     0.00  std::_List_base<edaSolution*, std::allocator<edaSolution*> >::_M_clear()
  0.00      0.01     0.00        2     0.00     0.01  vrpSubRoute::vrpSubRoute(vrpSubRoute const&)
  0.00      0.01     0.00        2     0.00     0.00  vrpRouteNext::vrpRouteNext()
  0.00      0.01     0.00        2     0.00     0.00  edaPopulation::Serialize(edaBuffer&, bool)
  0.00      0.01     0.00        2     0.00     0.00  edaPopulation::edaPopulation(edaPopulation const&)
  0.00      0.01     0.00        2     0.00     0.00  edaWrapperControl::insertLoop(int, int, edaContinue const&)
  0.00      0.01     0.00        2     0.00     0.00  vrpInterchangeRand::Serialize(edaBuffer&, bool)
  0.00      0.01     0.00        2     0.00     0.00  edaSimpleSolutionTabuList::check(edaMove const*, edaSolution const*)
  0.00      0.01     0.00        2     0.00     0.00  edaTS::search(edaSolutionList&)
  0.00      0.01     0.00        2     0.00     0.00  edaTabuList::getClassID() const
  0.00      0.01     0.00        2     0.00     0.00  vrpSubRoute::getComingTime(unsigned int) const
  0.00      0.01     0.00        2     0.00     0.00  edaPopulation::mean() const
  0.00      0.01     0.00        2     0.00     0.00  std::vector<vrpSubRoute*, std::allocator<vrpSubRoute*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<vrpSubRoute**, std::vector<vrpSubRoute*, std::allocator<vrpSubRoute*> > >, vrpSubRoute* const&)
  0.00      0.01     0.00        1     0.00     0.00  global constructors keyed to _ZN18vrpInterchangeRandC2Ev
  0.00      0.01     0.00        1     0.00     0.00  global constructors keyed to _ZN21edaSimpleMoveTabuListC2Ev
  0.00      0.01     0.00        1     0.00     0.00  classGenerateFromBuffer(edaBuffer&)
  0.00      0.01     0.00        1     0.00     0.00  edaSolution::~edaSolution()
  0.00      0.01     0.00        1     0.00   148.53  vrpSolution::Serialize(edaBuffer&, bool)
  0.00      0.01     0.00        1     0.00     0.00  vrpSolution::vrpSolution(vrpSolution const&)
  0.00      0.01     0.00        1     0.00     0.02  vrpSubRoute::update()
  0.00      0.01     0.00        1     0.00    11.47  vrpSubRoute::operator=(vrpSubRoute const&)
  0.00      0.01     0.00        1     0.00     0.00  vrpRouteNext::isFeasibleMove(vrpRouteMove*, vrpRoute*)
  0.00      0.01     0.00        1     0.00     0.00  edaPopulation::~edaPopulation()
  0.00      0.01     0.00        1     0.00     0.00  edaPopulation::~edaPopulation()
  0.00      0.01     0.00        1     0.00     0.00  vrpSubRouteMove::vrpSubRouteMove(vrpSubRouteMove const&)
  0.00      0.01     0.00        1     0.00     0.00  vrpSubRouteNext::isFeasibleMove(vrpSubRouteMove*, vrpSubRoute*)
  0.00      0.01     0.00        1     0.00     0.00  vrpGroupConflict::vrpGroupConflict()
  0.00      0.01     0.00        1     0.00     0.00  edaWrapperControl::insertEdge(int, int)
  0.00      0.01     0.00        1     0.00     0.00  edaWrapperControl::allDone()
  0.00      0.01     0.00        1     0.00     0.00  vrpInterchangeRand::vrpInterchangeRand(vrpInterchangeRand const&)
  0.00      0.01     0.00        1     0.00     0.00  edaSimpleMoveTabuList::add(edaMove const*, edaSolution const*)
  0.00      0.01     0.00        1     0.00     0.00  edaSimpleSolutionTabuList::removeSolution(edaSolution const*)
  0.00      0.01     0.00        1     0.00     0.00  edaSimpleSolutionTabuList::add(edaMove const*, edaSolution const*)
  0.00      0.01     0.00        1     0.00     0.00  edaSimpleSolutionTabuList::Serialize(edaBuffer&, bool)
  0.00      0.01     0.00        1     0.00     0.00  edaSimpleSolutionTabuList::edaSimpleSolutionTabuList(unsigned int)
  0.00      0.01     0.00        1     0.00     0.00  edaTS::easer()
  0.00      0.01     0.00        1     0.00     0.00  edaTS::edaTS(edaTS const&)
  0.00      0.01     0.00        1     0.00     0.00  vrpConst::~vrpConst()
  0.00      0.01     0.00        1     0.00    11.42  vrpGenne::Serialize(edaBuffer&, bool)
  0.00      0.01     0.00        1     0.00     0.00  vrpRoute::~vrpRoute()
  0.00      0.01     0.00        1     0.00     0.00  edaBuffer::Pack(char const*, int)
  0.00      0.01     0.00        1     0.00     0.00  vrpProblem::printOn(std::ostream&) const
  0.00      0.01     0.00        1     0.00     0.01  vrpSolution::debug(std::ostream&) const
  0.00      0.01     0.00        1     0.00     0.00  vrpSubRoute::getDistance(unsigned int) const
  0.00      0.01     0.00        1     0.00     0.00  vrpSubRoute::getShapeMetric(unsigned int) const
  0.00      0.01     0.00        1     0.00     0.00  vrpSubRoute::getGroup() const
  0.00      0.01     0.00        1     0.00     0.00  edaPopulation::clone() const
  0.00      0.01     0.00        1     0.00     0.00  edaWrapperControl::findReadyTask() const
  0.00      0.01     0.00        1     0.00     0.00  vrpRepresentation::clone() const
  0.00      0.01     0.00        1     0.00     0.00  vrpRepresentation::encode(edaSolution const*, edaChromosome*) const
  0.00      0.01     0.00        1     0.00     0.00  vrpInterchangeMove::printOn(std::ostream&) const
  0.00      0.01     0.00        1     0.00     0.00  vrpRoute::isRedundancy() const
  0.00      0.01     0.00        1     0.00     0.00  vrpRoute::getShapeMetric() const
  0.00      0.01     0.00        1     0.00     0.00  vrpRoute::getTotalMoveDist() const
  0.00      0.01     0.00        1     0.00     0.00  vrpRoute::getTotalMoveTime() const
  0.00      0.01     0.00        1     0.00     0.00  std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::_M_lower_bound(std::_Rb_tree_node<std::pair<int const, int> > const*, std::_Rb_tree_node<std::pair<int const, int> > const*, int const&) const
  0.00      0.01     0.00        1     0.00     0.00  std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::find(int const&) const
  0.00      0.01     0.00        1     0.00     0.00  std::vector<edaSolution*, std::allocator<edaSolution*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<edaSolution**, std::vector<edaSolution*, std::allocator<edaSolution*> > >, edaSolution* const&)
  0.00      0.01     0.00        1     0.00     0.00  void std::__push_heap<__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, int, edaChromosome*, bool (*)(edaChromosome*, edaChromosome*)>(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, int, int, edaChromosome*, bool (*)(edaChromosome*, edaChromosome*))
  0.00      0.01     0.00        1     0.00     0.00  void std::__adjust_heap<__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, int, edaChromosome*, bool (*)(edaChromosome*, edaChromosome*)>(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, int, int, edaChromosome*, bool (*)(edaChromosome*, edaChromosome*))
  0.00      0.01     0.00        1     0.00     0.00  void std::__insertion_sort<__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, bool (*)(edaChromosome*, edaChromosome*)>(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, __gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, bool (*)(edaChromosome*, edaChromosome*))
  0.00      0.01     0.00        1     0.00     0.00  void std::__introsort_loop<__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, int, bool (*)(edaChromosome*, edaChromosome*)>(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, __gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, int, bool (*)(edaChromosome*, edaChromosome*))
  0.00      0.01     0.00        1     0.00     0.01  __gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, edaChromosome*, bool (*)(edaChromosome*, edaChromosome*)>(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, __gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, edaChromosome*, bool (*)(edaChromosome*, edaChromosome*))
  0.00      0.01     0.00        1     0.00    57.05  _init

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 100.00% of 0.01 seconds

index % time    self  children    called     name
                                 842             vrpSubRouteMove::printOn(std::ostream&) const [1]
                0.00    0.00       1/254195      userClassGenerate(int) [14]
                0.00    0.00       4/254195      main <cycle 1> [41]
                0.00    0.00     501/254195      vrpConst::vrpConst(float const*, unsigned int) [25]
                0.00    0.00    9125/254195      vrpConst::vrpConst(vrpConst::TYPE) [11]
                0.01    0.00  244564/254195      vrpConst::Serialize(edaBuffer&, bool) [3]
[1]    100.0    0.01    0.00  254195+842     vrpSubRouteMove::printOn(std::ostream&) const [1]
                0.00    0.00     843/186455      vrpSubRouteMove::Serialize(edaBuffer&, bool) [56]
                0.00    0.00       4/11          vrpInterchangeMove::init(edaSolution const&) [73]
                0.00    0.00       4/156         vrpSubRouteNext::generate(edaMove*, edaSolution const&) [67]
                                 842             vrpSubRouteMove::printOn(std::ostream&) const [1]
-----------------------------------------------
[2]     99.9    0.00    0.01     875+122835  <cycle 1 as a whole> [2]
                0.00    0.01     177+4           vrpProblem::printTable(char const*) <cycle 1> [4]
                0.00    0.00   61487             vrpInterchangeNext::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) <cycle 1> [16]
                0.00    0.00     337             vrpRouteMove::Serialize(edaBuffer&, bool) <cycle 1> [38]
                0.00    0.00   60991+6           main <cycle 1> [41]
                0.00    0.00      17             vrpRoute::Serialize(edaBuffer&, bool) <cycle 1> [44]
                0.00    0.00     167             vrpRouteMove::update(edaSolution&) const <cycle 1> [48]
                0.00    0.00     179             vrpInterchangeNext::generate(edaMove*, edaSolution const&) <cycle 1> [61]
                0.00    0.00     174+2           vrpSolution::writeCSVFile(char const*) const <cycle 1> [62]
                0.00    0.00     171             vrpRouteMove::~vrpRouteMove() <cycle 1> [63]
                0.00    0.00       8+4           vrpSolution::getRandomFirstStop(vrpStop*, double) const <cycle 1> [74]
                0.00    0.00       2             vrpInterchangeRand::Serialize(edaBuffer&, bool) <cycle 1> [97]
-----------------------------------------------
                                 499             vrpConst::Serialize(edaBuffer&, bool) [3]
                0.00    0.00       1/62141       _init [15]
                0.00    0.00       2/62141       vrpInterchangeRand::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) [13]
                0.00    0.00       3/62141       vrpInterchangeRand::~vrpInterchangeRand() [20]
                0.00    0.00     330/62141       vrpInterchangeNext::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) <cycle 1> [16]
                0.00    0.01   61805/62141       vrpProblem::printTable(char const*) <cycle 1> [4]
[3]     99.9    0.00    0.01   62141+499     vrpConst::Serialize(edaBuffer&, bool) [3]
                0.01    0.00  244564/254195      vrpSubRouteMove::printOn(std::ostream&) const [1]
                0.00    0.00   61141/63151       vrpConst::vrpConst(vrpConst::TYPE) [11]
                0.00    0.00     500/501         vrpConst::vrpConst(float const*, unsigned int) [25]
                0.00    0.00     500/186455      vrpSubRouteMove::Serialize(edaBuffer&, bool) [56]
                                 499             vrpConst::Serialize(edaBuffer&, bool) [3]
-----------------------------------------------
                                   4             vrpProblem::printTable(char const*) <cycle 1> [4]
                                   3             vrpRoute::Serialize(edaBuffer&, bool) <cycle 1> [44]
                0.00    0.00       1/875         vrpSolution::Serialize(edaBuffer&, bool) [12]
                0.00    0.00       2/875         vrpInterchangeRand::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) [13]
                0.00    0.00       2/875         std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
                0.00    0.00       3/875         vrpInterchangeRand::~vrpInterchangeRand() [20]
                0.00    0.00     166/875         vrpProblem::vrpProblem() [7]
[4]     99.4    0.00    0.01     177+4       vrpProblem::printTable(char const*) <cycle 1> [4]
                0.00    0.01   61805/62141       vrpConst::Serialize(edaBuffer&, bool) [3]
                0.00    0.00     166/63151       vrpConst::vrpConst(vrpConst::TYPE) [11]
                0.00    0.00     166/331         vrpConst::vrpConst(vrpConst const&) [60]
                0.00    0.00     165/165         vrpConst::clone() const [66]
                0.00    0.00       2/14          vrpRoute::getClassID() const [72]
                0.00    0.00       1/168         vrpSolution::improveLandfill() [64]
                               61475             vrpInterchangeNext::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) <cycle 1> [16]
                               60981             main <cycle 1> [41]
                                   3             vrpInterchangeNext::generate(edaMove*, edaSolution const&) <cycle 1> [61]
                                   2             vrpRoute::Serialize(edaBuffer&, bool) <cycle 1> [44]
                                   4             vrpProblem::printTable(char const*) <cycle 1> [4]
-----------------------------------------------
                                                 <spontaneous>
[5]     37.8    0.00    0.00                 vrpProblem::getStop(unsigned int) const [5]
                0.00    0.00     166/875         vrpRouteMove::~vrpRouteMove() <cycle 1> [63]
                0.00    0.00     165/875         vrpRouteMove::Serialize(edaBuffer&, bool) <cycle 1> [38]
-----------------------------------------------
                0.00    0.00       1/170         vrpInterchangeRand::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) [13]
                0.00    0.00       1/170         _init [15]
                0.00    0.00       1/170         vrpProblem::isConflict(std::vector<unsigned int, std::allocator<unsigned int> > const&) const [36]
                0.00    0.00       2/170         std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
                0.00    0.00     165/170         vrpProblem::~vrpProblem() [9]
[6]     19.1    0.00    0.00     170         vrpSolution::detail() const [6]
                0.00    0.00     167/875         vrpSolution::writeCSVFile(char const*) const <cycle 1> [62]
-----------------------------------------------
                                                 <spontaneous>
[7]     19.0    0.00    0.00                 vrpProblem::vrpProblem() [7]
                0.00    0.00     166/875         vrpProblem::printTable(char const*) <cycle 1> [4]
                0.00    0.00     332/63151       vrpConst::vrpConst(vrpConst::TYPE) [11]
-----------------------------------------------
                                                 <spontaneous>
[8]     18.8    0.00    0.00                 vrpProblem::Serialize(edaBuffer&, bool) [8]
                0.00    0.00     165/875         vrpInterchangeNext::generate(edaMove*, edaSolution const&) <cycle 1> [61]
                0.00    0.00       1/169         vrpSolution::getNextStop(vrpSubRoute&, unsigned int&) const [23]
                0.00    0.00       3/501         vrpSolution::init() [37]
-----------------------------------------------
                                                 <spontaneous>
[9]     18.5    0.00    0.00                 vrpProblem::~vrpProblem() [9]
                0.00    0.00     165/170         vrpSolution::detail() const [6]
-----------------------------------------------
                                                 <spontaneous>
[10]     3.8    0.00    0.00                 std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
                0.00    0.00       1/1           vrpSolution::Serialize(edaBuffer&, bool) [12]
                0.00    0.00       1/1           _init [15]
                0.00    0.00       7/10          edaWrapperControl::checkLoopStatus(int) [17]
                0.00    0.00       2/875         main <cycle 1> [41]
                0.00    0.00       2/875         vrpInterchangeNext::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) <cycle 1> [16]
                0.00    0.00       2/875         vrpProblem::printTable(char const*) <cycle 1> [4]
                0.00    0.00       2/170         vrpSolution::detail() const [6]
                0.00    0.00       1/3           vrpRepresentation::decode(edaChromosome const*, edaSolution*) const [19]
                0.00    0.00       1/875         vrpInterchangeNext::generate(edaMove*, edaSolution const&) <cycle 1> [61]
                0.00    0.00       1/875         vrpRoute::Serialize(edaBuffer&, bool) <cycle 1> [44]
                0.00    0.00       1/875         vrpSolution::getRandomFirstStop(vrpStop*, double) const <cycle 1> [74]
                0.00    0.00       1/3           vrpSubRoute::Serialize(edaBuffer&, bool) [28]
                0.00    0.00       1/9           vrpConst::load(char const*) [39]
                0.00    0.00       2/63151       vrpConst::vrpConst(vrpConst::TYPE) [11]
                0.00    0.00       3/3           edaWrapperControl::chooseSolution(int, edaSolutionList&) [86]
                0.00    0.00       2/2           edaTS::search(edaSolutionList&) [99]
                0.00    0.00       2/2           edaWrapperControl::insertLoop(int, int, edaContinue const&) [96]
                0.00    0.00       1/3           vrpConst::operator=(vrpConst const&) [87]
                0.00    0.00       1/1           vrpRouteNext::isFeasibleMove(vrpRouteMove*, vrpRoute*) [109]
                0.00    0.00       1/1           vrpSubRouteMove::vrpSubRouteMove(vrpSubRouteMove const&) [112]
                0.00    0.00       1/186455      vrpSubRouteMove::Serialize(edaBuffer&, bool) [56]
                0.00    0.00       1/1           vrpInterchangeMove::printOn(std::ostream&) const [136]
                0.00    0.00       1/1           vrpInterchangeRand::vrpInterchangeRand(vrpInterchangeRand const&) [117]
                0.00    0.00       1/1           global constructors keyed to _ZN18vrpInterchangeRandC2Ev [104]
                0.00    0.00       1/1           vrpProblem::printOn(std::ostream&) const [128]
                0.00    0.00       1/1           vrpRepresentation::encode(edaSolution const*, edaChromosome*) const [135]
                0.00    0.00       1/1           vrpRepresentation::clone() const [134]
                0.00    0.00       1/6           vrpRepresentation::init(edaSolutionList const&, edaPopulation&) const [77]
                0.00    0.00       1/1           vrpSolution::vrpSolution(vrpSolution const&) [108]
                0.00    0.00       1/4           vrpSolution::getBestFirstStop(vrpStop*, double) const [82]
                0.00    0.00       1/1           vrpSubRoute::getDistance(unsigned int) const [129]
                0.00    0.00       1/1           vrpSubRoute::getShapeMetric(unsigned int) const [130]
                0.00    0.00       1/58          edaSA::search(edaSolutionList&) [71]
                0.00    0.00       1/1           classGenerateFromBuffer(edaBuffer&) [106]
                0.00    0.00       1/1           global constructors keyed to _ZN21edaSimpleMoveTabuListC2Ev [105]
                0.00    0.00       1/1           edaSimpleMoveTabuList::add(edaMove const*, edaSolution const*) [118]
                0.00    0.00       1/334         edaSimpleMoveTabuList::Serialize(edaBuffer&, bool) [59]
                0.00    0.00       1/1           edaSimpleSolutionTabuList::add(edaMove const*, edaSolution const*) [120]
                0.00    0.00       1/1           edaSimpleSolutionTabuList::Serialize(edaBuffer&, bool) [121]
                0.00    0.00       1/3           global constructors keyed to _ZNK11edaSolution7printOnERSo [85]
                0.00    0.00       1/1           edaSolution::~edaSolution() [107]
                0.00    0.00       1/1           edaTS::easer() [123]
                0.00    0.00       1/1           edaTS::edaTS(edaTS const&) [124]
                0.00    0.00       1/1           edaWrapperControl::insertEdge(int, int) [115]
                0.00    0.00       1/1           edaWrapperControl::allDone() [116]
                0.00    0.00       1/1           edaWrapperControl::findReadyTask() const [133]
-----------------------------------------------
                0.00    0.00       1/63151       vrpInterchangeRand::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) [13]
                0.00    0.00       1/63151       vrpProblem::isConflict(std::vector<unsigned int, std::allocator<unsigned int> > const&) const [36]
                0.00    0.00       1/63151       vrpSolution::debug(std::ostream&) const [51]
                0.00    0.00       2/63151       vrpRouteMove::update(edaSolution&) const <cycle 1> [48]
                0.00    0.00       2/63151       std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
                0.00    0.00       3/63151       userClassGenerate(int) [14]
                0.00    0.00     165/63151       vrpConst::load(char const*) [39]
                0.00    0.00     165/63151       vrpProblem::easer() [21]
                0.00    0.00     166/63151       vrpProblem::printTable(char const*) <cycle 1> [4]
                0.00    0.00     167/63151       vrpSolution::getNextStop(vrpSubRoute&, unsigned int&) const [23]
                0.00    0.00     332/63151       vrpProblem::vrpProblem() [7]
                0.00    0.00     337/63151       vrpRouteMove::Serialize(edaBuffer&, bool) <cycle 1> [38]
                0.00    0.00     668/63151       vrpSolution::init() [37]
                0.00    0.00   61141/63151       vrpConst::Serialize(edaBuffer&, bool) [3]
[11]     3.6    0.00    0.00   63151         vrpConst::vrpConst(vrpConst::TYPE) [11]
                0.00    0.00    9125/254195      vrpSubRouteMove::printOn(std::ostream&) const [1]
                0.00    0.00   62812/186455      vrpSubRouteMove::Serialize(edaBuffer&, bool) [56]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[12]     1.5    0.00    0.00       1         vrpSolution::Serialize(edaBuffer&, bool) [12]
                0.00    0.00       8/8           userClassGenerate(int) [14]
                0.00    0.00       2/875         vrpSolution::writeCSVFile(char const*) const <cycle 1> [62]
                0.00    0.00       1/875         vrpInterchangeNext::generate(edaMove*, edaSolution const&) <cycle 1> [61]
                0.00    0.00       1/875         vrpInterchangeNext::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) <cycle 1> [16]
                0.00    0.00       1/875         main <cycle 1> [41]
                0.00    0.00       1/875         vrpProblem::printTable(char const*) <cycle 1> [4]
                0.00    0.00       1/875         vrpInterchangeRand::Serialize(edaBuffer&, bool) <cycle 1> [97]
                0.00    0.00       4/8           vrpSubRouteMove::incrEval(edaSolution const&) const [75]
                0.00    0.00       2/5           vrpRouteMove::printOn(std::ostream&) const [79]
                0.00    0.00       1/3           vrpConst::operator=(vrpConst const&) [87]
-----------------------------------------------
                                   1             vrpInterchangeRand::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) [13]
                0.00    0.00       1/6           _start [22]
                0.00    0.00       1/6           vrpSolution::vrpSolution(vrpProblem*) [30]
                0.00    0.00       1/6           vrpSubRoute::operator=(vrpSubRoute const&) [29]
                0.00    0.00       1/6           edaBuffer::UnPack(float*, int) [31]
                0.00    0.00       2/6           edaWrapperControl::checkLoopStatus(int) [17]
[13]     0.7    0.00    0.00       6+1       vrpInterchangeRand::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) [13]
                0.00    0.00       3/875         vrpInterchangeNext::generate(edaMove*, edaSolution const&) <cycle 1> [61]
                0.00    0.00       2/875         vrpProblem::printTable(char const*) <cycle 1> [4]
                0.00    0.00       1/170         vrpSolution::detail() const [6]
                0.00    0.00       2/62141       vrpConst::Serialize(edaBuffer&, bool) [3]
                0.00    0.00       1/169         vrpSolution::getNextStop(vrpSubRoute&, unsigned int&) const [23]
                0.00    0.00       3/501         vrpSolution::init() [37]
                0.00    0.00       1/63151       vrpConst::vrpConst(vrpConst::TYPE) [11]
                0.00    0.00       3/4           std::vector<vrpRoute*, std::allocator<vrpRoute*> >::at(unsigned int) [83]
                0.00    0.00       3/6           vrpRepresentation::init(edaSolutionList const&, edaPopulation&) const [77]
                0.00    0.00       3/3           vrpRepresentation::encode(edaSolutionList const&, edaPopulation&) const [90]
                0.00    0.00       2/3           vrpInterchangeRand::clone() const [91]
                                   1             vrpInterchangeRand::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) [13]
-----------------------------------------------
                0.00    0.00       8/8           vrpSolution::Serialize(edaBuffer&, bool) [12]
[14]     0.7    0.00    0.00       8         userClassGenerate(int) [14]
                0.00    0.00       2/875         main <cycle 1> [41]
                0.00    0.00       1/875         vrpRouteMove::Serialize(edaBuffer&, bool) <cycle 1> [38]
                0.00    0.00       1/1           vrpGenne::Serialize(edaBuffer&, bool) [32]
                0.00    0.00       1/875         vrpInterchangeNext::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) <cycle 1> [16]
                0.00    0.00       1/875         vrpSolution::getRandomFirstStop(vrpStop*, double) const <cycle 1> [74]
                0.00    0.00       1/254195      vrpSubRouteMove::printOn(std::ostream&) const [1]
                0.00    0.00       1/501         vrpConst::vrpConst(float const*, unsigned int) [25]
                0.00    0.00       3/63151       vrpConst::vrpConst(vrpConst::TYPE) [11]
                0.00    0.00       1/3           vrpInterchangeRand::clone() const [91]
                0.00    0.00       1/1           std::vector<edaSolution*, std::allocator<edaSolution*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<edaSolution**, std::vector<edaSolution*, std::allocator<edaSolution*> > >, edaSolution* const&) [143]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[15]     0.6    0.00    0.00       1         _init [15]
                0.00    0.00       2/875         main <cycle 1> [41]
                0.00    0.00       1/875         vrpInterchangeNext::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) <cycle 1> [16]
                0.00    0.00       1/875         vrpInterchangeNext::generate(edaMove*, edaSolution const&) <cycle 1> [61]
                0.00    0.00       1/170         vrpSolution::detail() const [6]
                0.00    0.00       1/62141       vrpConst::Serialize(edaBuffer&, bool) [3]
                0.00    0.00       1/1           vrpSubRouteNext::isFeasibleMove(vrpSubRouteMove*, vrpSubRoute*) [113]
                0.00    0.00       1/4           vrpSolution::getBestFirstStop(vrpStop*, double) const [82]
                0.00    0.00       1/5           vrpRouteMove::printOn(std::ostream&) const [79]
                0.00    0.00       1/1           vrpGroupConflict::vrpGroupConflict() [114]
-----------------------------------------------
                                   1             vrpRoute::Serialize(edaBuffer&, bool) <cycle 1> [44]
                                   5             vrpInterchangeNext::generate(edaMove*, edaSolution const&) <cycle 1> [61]
                               61475             vrpProblem::printTable(char const*) <cycle 1> [4]
                0.00    0.00       1/875         _init [15]
                0.00    0.00       1/875         userClassGenerate(int) [14]
                0.00    0.00       1/875         vrpSolution::easer() [34]
                0.00    0.00       1/875         vrpSolution::Serialize(edaBuffer&, bool) [12]
                0.00    0.00       2/875         std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[16]     0.5    0.00    0.00   61487         vrpInterchangeNext::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) <cycle 1> [16]
                0.00    0.00     330/62141       vrpConst::Serialize(edaBuffer&, bool) [3]
                0.00    0.00     165/331         vrpConst::vrpConst(vrpConst const&) [60]
                0.00    0.00       2/145         vrpInterchangeMove::Serialize(edaBuffer&, bool) [68]
                0.00    0.00       2/156         vrpSubRouteNext::generate(edaMove*, edaSolution const&) [67]
                0.00    0.00       1/58          edaSA::search(edaSolutionList&) [71]
                                   1             vrpSolution::writeCSVFile(char const*) const <cycle 1> [62]
-----------------------------------------------
                                   2             edaWrapperControl::checkLoopStatus(int) [17]
                0.00    0.00       1/10          std::vector<vrpRoute*, std::allocator<vrpRoute*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<vrpRoute**, std::vector<vrpRoute*, std::allocator<vrpRoute*> > >, vrpRoute* const&) [26]
                0.00    0.00       2/10          vrpRepresentation::decode(edaChromosome const*, edaSolution*) const [19]
                0.00    0.00       7/10          std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[17]     0.5    0.00    0.00      10+2       edaWrapperControl::checkLoopStatus(int) [17]
                0.00    0.00       2/6           vrpInterchangeRand::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) [13]
                0.00    0.00       1/875         vrpRoute::Serialize(edaBuffer&, bool) <cycle 1> [44]
                0.00    0.00       1/4           vrpSolution::createSubRoute(vrpStop*, double, double) [18]
                0.00    0.00       1/14          vrpRoute::getClassID() const [72]
                0.00    0.00       1/1           std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::find(int const&) const [142]
                                   2             edaWrapperControl::checkLoopStatus(int) [17]
-----------------------------------------------
                0.00    0.00       1/4           edaWrapperControl::checkLoopStatus(int) [17]
                0.00    0.00       1/4           std::vector<vrpRoute*, std::allocator<vrpRoute*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<vrpRoute**, std::vector<vrpRoute*, std::allocator<vrpRoute*> > >, vrpRoute* const&) [26]
                0.00    0.00       1/4           vrpSolution::getNextStop(vrpSubRoute&, unsigned int&) const [23]
                0.00    0.00       1/4           vrpGenne::Serialize(edaBuffer&, bool) [32]
[18]     0.5    0.00    0.00       4         vrpSolution::createSubRoute(vrpStop*, double, double) [18]
                0.00    0.00       3/875         vrpSolution::getRandomFirstStop(vrpStop*, double) const <cycle 1> [74]
                0.00    0.00       1/875         main <cycle 1> [41]
                0.00    0.00       1/168         vrpGroupConflict::vrpGroupConflict(unsigned int) [65]
-----------------------------------------------
                0.00    0.00       1/3           _start [22]
                0.00    0.00       1/3           __gmon_start__ [27]
                0.00    0.00       1/3           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[19]     0.4    0.00    0.00       3         vrpRepresentation::decode(edaChromosome const*, edaSolution*) const [19]
                0.00    0.00       2/875         vrpRoute::Serialize(edaBuffer&, bool) <cycle 1> [44]
                0.00    0.00       2/10          edaWrapperControl::checkLoopStatus(int) [17]
                0.00    0.00       1/3           vrpSubRoute::Serialize(edaBuffer&, bool) [28]
                0.00    0.00       1/1           vrpSubRoute::update() [47]
                0.00    0.00       1/17          std::vector<edaChromosome*, std::allocator<edaChromosome*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, edaChromosome* const&) [42]
                0.00    0.00       3/6           vrpInterchangeMove::~vrpInterchangeMove() [76]
                0.00    0.00       1/1           vrpSubRoute::getGroup() const [131]
                0.00    0.00       1/4           std::vector<unsigned int, std::allocator<unsigned int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int const&) [84]
-----------------------------------------------
                                                 <spontaneous>
[20]     0.3    0.00    0.00                 vrpInterchangeRand::~vrpInterchangeRand() [20]
                0.00    0.00       3/875         vrpProblem::printTable(char const*) <cycle 1> [4]
                0.00    0.00       3/62141       vrpConst::Serialize(edaBuffer&, bool) [3]
-----------------------------------------------
                                                 <spontaneous>
[21]     0.3    0.00    0.00                 vrpProblem::easer() [21]
                0.00    0.00     165/169         vrpSolution::getNextStop(vrpSubRoute&, unsigned int&) const [23]
                0.00    0.00     495/501         vrpSolution::init() [37]
                0.00    0.00     165/63151       vrpConst::vrpConst(vrpConst::TYPE) [11]
-----------------------------------------------
                                                 <spontaneous>
[22]     0.3    0.00    0.00                 _start [22]
                0.00    0.00       1/3           vrpRepresentation::decode(edaChromosome const*, edaSolution*) const [19]
                0.00    0.00       1/6           vrpInterchangeRand::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) [13]
                0.00    0.00       1/3           vrpSubRoute::Serialize(edaBuffer&, bool) [28]
-----------------------------------------------
                0.00    0.00       1/169         vrpInterchangeRand::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) [13]
                0.00    0.00       1/169         vrpProblem::Serialize(edaBuffer&, bool) [8]
                0.00    0.00       1/169         std::vector<edaChromosome*, std::allocator<edaChromosome*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, edaChromosome* const&) [42]
                0.00    0.00       1/169         vrpSubRoute::pushStop(unsigned int) [43]
                0.00    0.00     165/169         vrpProblem::easer() [21]
[23]     0.2    0.00    0.00     169         vrpSolution::getNextStop(vrpSubRoute&, unsigned int&) const [23]
                0.00    0.00       1/4           vrpSolution::createSubRoute(vrpStop*, double, double) [18]
                0.00    0.00       1/875         vrpSolution::getRandomFirstStop(vrpStop*, double) const <cycle 1> [74]
                0.00    0.00     167/63151       vrpConst::vrpConst(vrpConst::TYPE) [11]
                0.00    0.00       1/168         vrpGroupConflict::vrpGroupConflict(unsigned int) [65]
-----------------------------------------------
                                                 <spontaneous>
[24]     0.2    0.00    0.00                 vrpInterchangeNext::getClassID() const [24]
                0.00    0.00       2/875         vrpInterchangeNext::generate(edaMove*, edaSolution const&) <cycle 1> [61]
-----------------------------------------------
                0.00    0.00       1/501         userClassGenerate(int) [14]
                0.00    0.00     500/501         vrpConst::Serialize(edaBuffer&, bool) [3]
[25]     0.2    0.00    0.00     501         vrpConst::vrpConst(float const*, unsigned int) [25]
                0.00    0.00     501/254195      vrpSubRouteMove::printOn(std::ostream&) const [1]
-----------------------------------------------
                                                 <spontaneous>
[26]     0.2    0.00    0.00                 std::vector<vrpRoute*, std::allocator<vrpRoute*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<vrpRoute**, std::vector<vrpRoute*, std::allocator<vrpRoute*> > >, vrpRoute* const&) [26]
                0.00    0.00       1/4           vrpSolution::createSubRoute(vrpStop*, double, double) [18]
                0.00    0.00       1/10          edaWrapperControl::checkLoopStatus(int) [17]
                0.00    0.00       2/17          std::vector<edaChromosome*, std::allocator<edaChromosome*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, edaChromosome* const&) [42]
                0.00    0.00       2/6           vrpInterchangeMove::~vrpInterchangeMove() [76]
                0.00    0.00       1/14          vrpRoute::getClassID() const [72]
                0.00    0.00       1/1           edaBuffer::Pack(char const*, int) [127]
-----------------------------------------------
                                                 <spontaneous>
[27]     0.1    0.00    0.00                 __gmon_start__ [27]
                0.00    0.00       1/3           vrpRepresentation::decode(edaChromosome const*, edaSolution*) const [19]
-----------------------------------------------
                0.00    0.00       1/3           _start [22]
                0.00    0.00       1/3           vrpRepresentation::decode(edaChromosome const*, edaSolution*) const [19]
                0.00    0.00       1/3           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[28]     0.1    0.00    0.00       3         vrpSubRoute::Serialize(edaBuffer&, bool) [28]
                0.00    0.00       1/1           vrpSubRoute::operator=(vrpSubRoute const&) [29]
                0.00    0.00       1/3           std::_List_base<edaSolution*, std::allocator<edaSolution*> >::_M_clear() [92]
                0.00    0.00       1/3           edaSolution::printOn(std::ostream&) const [88]
-----------------------------------------------
                0.00    0.00       1/1           vrpSubRoute::Serialize(edaBuffer&, bool) [28]
[29]     0.1    0.00    0.00       1         vrpSubRoute::operator=(vrpSubRoute const&) [29]
                0.00    0.00       1/6           vrpInterchangeRand::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) [13]
                0.00    0.00       1/3           edaPopulation::std() const [89]
                0.00    0.00       1/1           edaSimpleSolutionTabuList::edaSimpleSolutionTabuList(unsigned int) [122]
-----------------------------------------------
                                                 <spontaneous>
[30]     0.1    0.00    0.00                 vrpSolution::vrpSolution(vrpProblem*) [30]
                0.00    0.00       1/6           vrpInterchangeRand::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) [13]
                0.00    0.00       2/4           vrpSolution::getBestFirstStop(vrpStop*, double) const [82]
-----------------------------------------------
                                                 <spontaneous>
[31]     0.1    0.00    0.00                 edaBuffer::UnPack(float*, int) [31]
                0.00    0.00       1/6           vrpInterchangeRand::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) [13]
-----------------------------------------------
                0.00    0.00       1/1           userClassGenerate(int) [14]
[32]     0.1    0.00    0.00       1         vrpGenne::Serialize(edaBuffer&, bool) [32]
                0.00    0.00       1/4           vrpSolution::createSubRoute(vrpStop*, double, double) [18]
-----------------------------------------------
                                                 <spontaneous>
[33]     0.1    0.00    0.00                 global constructors keyed to _ZN8vrpConstC2ENS_4TYPEE [33]
                0.00    0.00       1/875         vrpRoute::Serialize(edaBuffer&, bool) <cycle 1> [44]
                0.00    0.00       1/1           vrpConst::~vrpConst() [125]
                0.00    0.00       1/14          vrpRoute::getClassID() const [72]
-----------------------------------------------
                                                 <spontaneous>
[34]     0.1    0.00    0.00                 vrpSolution::easer() [34]
                0.00    0.00       1/875         vrpInterchangeNext::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) <cycle 1> [16]
-----------------------------------------------
                                                 <spontaneous>
[35]     0.1    0.00    0.00                 vrpSolution::~vrpSolution() [35]
                0.00    0.00       1/875         vrpInterchangeNext::generate(edaMove*, edaSolution const&) <cycle 1> [61]
-----------------------------------------------
                                                 <spontaneous>
[36]     0.1    0.00    0.00                 vrpProblem::isConflict(std::vector<unsigned int, std::allocator<unsigned int> > const&) const [36]
                0.00    0.00       1/170         vrpSolution::detail() const [6]
                0.00    0.00       1/63151       vrpConst::vrpConst(vrpConst::TYPE) [11]
-----------------------------------------------
                                 167             vrpSolution::init() [37]
                0.00    0.00       3/501         vrpInterchangeRand::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) [13]
                0.00    0.00       3/501         vrpProblem::Serialize(edaBuffer&, bool) [8]
                0.00    0.00     495/501         vrpProblem::easer() [21]
[37]     0.0    0.00    0.00     501+167     vrpSolution::init() [37]
                0.00    0.00     668/63151       vrpConst::vrpConst(vrpConst::TYPE) [11]
                                 167             vrpSolution::init() [37]
-----------------------------------------------
                                 171             vrpRouteMove::~vrpRouteMove() <cycle 1> [63]
                0.00    0.00       1/875         userClassGenerate(int) [14]
                0.00    0.00     165/875         vrpProblem::getStop(unsigned int) const [5]
[38]     0.0    0.00    0.00     337         vrpRouteMove::Serialize(edaBuffer&, bool) <cycle 1> [38]
                0.00    0.00     337/63151       vrpConst::vrpConst(vrpConst::TYPE) [11]
                0.00    0.00     165/336         vrpSubRouteMove::update(edaSolution&) const [58]
                                 165             vrpRouteMove::update(edaSolution&) const <cycle 1> [48]
-----------------------------------------------
                                 601             vrpConst::load(char const*) [39]
                0.00    0.00       1/9           vrpRoute::Serialize(edaBuffer&, bool) <cycle 1> [44]
                0.00    0.00       1/9           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
                0.00    0.00       7/9           vrpGroupConflict::isConflict(unsigned int, std::vector<unsigned int, std::allocator<unsigned int> > const&) const [40]
[39]     0.0    0.00    0.00       9+601     vrpConst::load(char const*) [39]
                0.00    0.00     165/63151       vrpConst::vrpConst(vrpConst::TYPE) [11]
                                 601             vrpConst::load(char const*) [39]
-----------------------------------------------
                                                 <spontaneous>
[40]     0.0    0.00    0.00                 vrpGroupConflict::isConflict(unsigned int, std::vector<unsigned int, std::allocator<unsigned int> > const&) const [40]
                0.00    0.00       7/9           vrpConst::load(char const*) [39]
                0.00    0.00      52/58          edaSA::search(edaSolutionList&) [71]
-----------------------------------------------
                                   6             main <cycle 1> [41]
                                   2             vrpRoute::Serialize(edaBuffer&, bool) <cycle 1> [44]
                               60981             vrpProblem::printTable(char const*) <cycle 1> [4]
                0.00    0.00       1/875         vrpSolution::Serialize(edaBuffer&, bool) [12]
                0.00    0.00       1/875         vrpSolution::createSubRoute(vrpStop*, double, double) [18]
                0.00    0.00       2/875         _init [15]
                0.00    0.00       2/875         userClassGenerate(int) [14]
                0.00    0.00       2/875         std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[41]     0.0    0.00    0.00   60991+6       main <cycle 1> [41]
                0.00    0.00       4/254195      vrpSubRouteMove::printOn(std::ostream&) const [1]
                0.00    0.00  121958/186455      vrpSubRouteMove::Serialize(edaBuffer&, bool) [56]
                0.00    0.00       1/14          vrpRoute::getClassID() const [72]
                                   3             vrpRoute::Serialize(edaBuffer&, bool) <cycle 1> [44]
                                   6             main <cycle 1> [41]
-----------------------------------------------
                                   1             std::vector<edaChromosome*, std::allocator<edaChromosome*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, edaChromosome* const&) [42]
                0.00    0.00       1/17          vrpRepresentation::decode(edaChromosome const*, edaSolution*) const [19]
                0.00    0.00       1/17          vrpSubRoute::printOn(std::ostream&) const [50]
                0.00    0.00       1/17          __gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, edaChromosome*, bool (*)(edaChromosome*, edaChromosome*)>(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, __gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, edaChromosome*, bool (*)(edaChromosome*, edaChromosome*)) [49]
                0.00    0.00       2/17          std::vector<vrpRoute*, std::allocator<vrpRoute*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<vrpRoute**, std::vector<vrpRoute*, std::allocator<vrpRoute*> > >, vrpRoute* const&) [26]
                0.00    0.00       2/17          vrpSubRoute::update() [47]
                0.00    0.00       3/17          vrpSubRoute::vrpSubRoute(vrpSubRoute const&) [46]
                0.00    0.00       7/17          vrpSubRoute::canInsert(vrpStop*, unsigned int) const [45]
[42]     0.0    0.00    0.00      17+1       std::vector<edaChromosome*, std::allocator<edaChromosome*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, edaChromosome* const&) [42]
                0.00    0.00       1/169         vrpSolution::getNextStop(vrpSubRoute&, unsigned int&) const [23]
                0.00    0.00       2/2           vrpSubRoute::getComingTime(unsigned int) const [101]
                0.00    0.00       1/6           vrpInterchangeMove::~vrpInterchangeMove() [76]
                                   1             std::vector<edaChromosome*, std::allocator<edaChromosome*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, edaChromosome* const&) [42]
-----------------------------------------------
                                                 <spontaneous>
[43]     0.0    0.00    0.00                 vrpSubRoute::pushStop(unsigned int) [43]
                0.00    0.00       1/169         vrpSolution::getNextStop(vrpSubRoute&, unsigned int&) const [23]
-----------------------------------------------
                                   2             vrpRouteMove::update(edaSolution&) const <cycle 1> [48]
                                   2             vrpProblem::printTable(char const*) <cycle 1> [4]
                                   2             vrpSolution::writeCSVFile(char const*) const <cycle 1> [62]
                                   3             main <cycle 1> [41]
                                   3             vrpInterchangeRand::Serialize(edaBuffer&, bool) <cycle 1> [97]
                0.00    0.00       1/875         edaWrapperControl::checkLoopStatus(int) [17]
                0.00    0.00       1/875         global constructors keyed to _ZN8vrpConstC2ENS_4TYPEE [33]
                0.00    0.00       1/875         std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
                0.00    0.00       2/875         vrpRepresentation::decode(edaChromosome const*, edaSolution*) const [19]
[44]     0.0    0.00    0.00      17         vrpRoute::Serialize(edaBuffer&, bool) <cycle 1> [44]
                0.00    0.00       1/9           vrpConst::load(char const*) [39]
                0.00    0.00      14/145         vrpInterchangeMove::Serialize(edaBuffer&, bool) [68]
                0.00    0.00       4/156         vrpSubRouteNext::generate(edaMove*, edaSolution const&) [67]
                0.00    0.00       4/8           vrpSubRouteMove::incrEval(edaSolution const&) const [75]
                0.00    0.00       2/5           vrpRouteMove::printOn(std::ostream&) const [79]
                0.00    0.00       1/4           std::vector<vrpRoute*, std::allocator<vrpRoute*> >::at(unsigned int) [83]
                0.00    0.00       1/3           vrpConst::operator=(vrpConst const&) [87]
                                   4             vrpSolution::writeCSVFile(char const*) const <cycle 1> [62]
                                   3             vrpProblem::printTable(char const*) <cycle 1> [4]
                                   2             vrpRouteMove::update(edaSolution&) const <cycle 1> [48]
                                   2             vrpInterchangeNext::generate(edaMove*, edaSolution const&) <cycle 1> [61]
                                   2             main <cycle 1> [41]
                                   1             vrpInterchangeNext::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) <cycle 1> [16]
                                   1             vrpInterchangeRand::Serialize(edaBuffer&, bool) <cycle 1> [97]
-----------------------------------------------
                                                 <spontaneous>
[45]     0.0    0.00    0.00                 vrpSubRoute::canInsert(vrpStop*, unsigned int) const [45]
                0.00    0.00       7/17          std::vector<edaChromosome*, std::allocator<edaChromosome*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, edaChromosome* const&) [42]
                0.00    0.00       2/2           vrpSubRoute::vrpSubRoute(vrpSubRoute const&) [46]
                0.00    0.00       2/5           edaSA::edaSA(edaMove*, edaMoveGen*, edaContinue*, double, edaCoolingSchedule*, int, int) [78]
-----------------------------------------------
                0.00    0.00       2/2           vrpSubRoute::canInsert(vrpStop*, unsigned int) const [45]
[46]     0.0    0.00    0.00       2         vrpSubRoute::vrpSubRoute(vrpSubRoute const&) [46]
                0.00    0.00       3/17          std::vector<edaChromosome*, std::allocator<edaChromosome*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, edaChromosome* const&) [42]
                0.00    0.00       1/1           void std::__adjust_heap<__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, int, edaChromosome*, bool (*)(edaChromosome*, edaChromosome*)>(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, int, int, edaChromosome*, bool (*)(edaChromosome*, edaChromosome*)) [145]
                0.00    0.00       1/4           std::vector<unsigned int, std::allocator<unsigned int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int const&) [84]
                0.00    0.00       1/1           vrpRoute::isRedundancy() const [137]
                0.00    0.00       1/3           edaPopulation::std() const [89]
                0.00    0.00       1/1           void std::__insertion_sort<__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, bool (*)(edaChromosome*, edaChromosome*)>(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, __gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, bool (*)(edaChromosome*, edaChromosome*)) [146]
                0.00    0.00       1/3           edaSolution::printOn(std::ostream&) const [88]
                0.00    0.00       1/1           vrpRoute::getShapeMetric() const [138]
-----------------------------------------------
                0.00    0.00       1/1           vrpRepresentation::decode(edaChromosome const*, edaSolution*) const [19]
[47]     0.0    0.00    0.00       1         vrpSubRoute::update() [47]
                0.00    0.00       2/17          std::vector<edaChromosome*, std::allocator<edaChromosome*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, edaChromosome* const&) [42]
                0.00    0.00       1/1           __gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, edaChromosome*, bool (*)(edaChromosome*, edaChromosome*)>(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, __gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, edaChromosome*, bool (*)(edaChromosome*, edaChromosome*)) [49]
                0.00    0.00       2/5           edaSA::edaSA(edaMove*, edaMoveGen*, edaContinue*, double, edaCoolingSchedule*, int, int) [78]
                0.00    0.00       2/5           edaPopulation::printOn(std::ostream&) const [81]
                0.00    0.00       2/2           edaSimpleSolutionTabuList::check(edaMove const*, edaSolution const*) [98]
-----------------------------------------------
                                   2             vrpRoute::Serialize(edaBuffer&, bool) <cycle 1> [44]
                                 165             vrpRouteMove::Serialize(edaBuffer&, bool) <cycle 1> [38]
[48]     0.0    0.00    0.00     167         vrpRouteMove::update(edaSolution&) const <cycle 1> [48]
                0.00    0.00       2/63151       vrpConst::vrpConst(vrpConst::TYPE) [11]
                0.00    0.00     108/145         vrpInterchangeMove::Serialize(edaBuffer&, bool) [68]
                0.00    0.00     104/122         vrpInterchangeMove::operator=(edaMove const&) [70]
                0.00    0.00       2/14          vrpRoute::getClassID() const [72]
                0.00    0.00       2/11          vrpInterchangeMove::init(edaSolution const&) [73]
                0.00    0.00       2/2           vrpRouteNext::vrpRouteNext() [93]
                0.00    0.00       2/156         vrpSubRouteNext::generate(edaMove*, edaSolution const&) [67]
                                   2             vrpRoute::Serialize(edaBuffer&, bool) <cycle 1> [44]
-----------------------------------------------
                0.00    0.00       1/1           vrpSubRoute::update() [47]
[49]     0.0    0.00    0.00       1         __gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, edaChromosome*, bool (*)(edaChromosome*, edaChromosome*)>(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, __gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, edaChromosome*, bool (*)(edaChromosome*, edaChromosome*)) [49]
                0.00    0.00       1/17          std::vector<edaChromosome*, std::allocator<edaChromosome*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, edaChromosome* const&) [42]
-----------------------------------------------
                                                 <spontaneous>
[50]     0.0    0.00    0.00                 vrpSubRoute::printOn(std::ostream&) const [50]
                0.00    0.00       1/17          std::vector<edaChromosome*, std::allocator<edaChromosome*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, edaChromosome* const&) [42]
-----------------------------------------------
                                   1             vrpSolution::debug(std::ostream&) const [51]
                0.00    0.00       1/1           __do_global_dtors_aux [52]
[51]     0.0    0.00    0.00       1+1       vrpSolution::debug(std::ostream&) const [51]
                0.00    0.00       1/63151       vrpConst::vrpConst(vrpConst::TYPE) [11]
                                   1             vrpSolution::debug(std::ostream&) const [51]
-----------------------------------------------
                                                 <spontaneous>
[52]     0.0    0.00    0.00                 __do_global_dtors_aux [52]
                0.00    0.00       1/1           vrpSolution::debug(std::ostream&) const [51]
                0.00    0.00       1/337         vrpGroupConflict::isConflict(std::vector<unsigned int, std::allocator<unsigned int> > const&) const [57]
-----------------------------------------------
                0.00    0.00       1/186455      vrpGroupConflict::vrpGroupConflict() [114]
                0.00    0.00       1/186455      vrpSubRouteNext::isFeasibleMove(vrpSubRouteMove*, vrpSubRoute*) [113]
                0.00    0.00       1/186455      std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
                0.00    0.00       4/186455      vrpSubRouteMove::incrEval(edaSolution const&) const [75]
                0.00    0.00     335/186455      vrpSubRouteMove::update(edaSolution&) const [58]
                0.00    0.00     500/186455      vrpConst::Serialize(edaBuffer&, bool) [3]
                0.00    0.00     843/186455      vrpSubRouteMove::printOn(std::ostream&) const [1]
                0.00    0.00   62812/186455      vrpConst::vrpConst(vrpConst::TYPE) [11]
                0.00    0.00  121958/186455      main <cycle 1> [41]
[56]     0.0    0.00    0.00  186455         vrpSubRouteMove::Serialize(edaBuffer&, bool) [56]
-----------------------------------------------
                0.00    0.00       1/337         __do_global_dtors_aux [52]
                0.00    0.00     168/337         vrpGroupConflict::Serialize(edaBuffer&, bool) [393]
                0.00    0.00     168/337         vrpSolution::getBestFirstStop(vrpStop*, double) const [82]
[57]     0.0    0.00    0.00     337         vrpGroupConflict::isConflict(std::vector<unsigned int, std::allocator<unsigned int> > const&) const [57]
-----------------------------------------------
                0.00    0.00       1/336         vrpRouteMove::printOn(std::ostream&) const [79]
                0.00    0.00       1/336         vrpSubRouteNext::isFeasibleMove(vrpSubRouteMove*, vrpSubRoute*) [113]
                0.00    0.00     165/336         vrpRouteMove::Serialize(edaBuffer&, bool) <cycle 1> [38]
                0.00    0.00     169/336         vrpGroupConflict::~vrpGroupConflict() [396]
[58]     0.0    0.00    0.00     336         vrpSubRouteMove::update(edaSolution&) const [58]
                0.00    0.00     335/186455      vrpSubRouteMove::Serialize(edaBuffer&, bool) [56]
-----------------------------------------------
                                 167             edaSimpleMoveTabuList::Serialize(edaBuffer&, bool) [59]
                0.00    0.00       1/334         vrpInterchangeRand::generate(edaMove*, edaSolution const&) [448]
                0.00    0.00       1/334         vrpProblem::getLandfill() const [669]
                0.00    0.00       1/334         std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
                0.00    0.00     165/334         vrpProblem::operator=(edaProblem const&) [228]
                0.00    0.00     166/334         vrpInterchangeNext::generate(edaMove*, edaSolution const&) <cycle 1> [61]
[59]     0.0    0.00    0.00     334+167     edaSimpleMoveTabuList::Serialize(edaBuffer&, bool) [59]
                                 167             edaSimpleMoveTabuList::Serialize(edaBuffer&, bool) [59]
-----------------------------------------------
                0.00    0.00     165/331         vrpInterchangeNext::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) <cycle 1> [16]
                0.00    0.00     166/331         vrpProblem::printTable(char const*) <cycle 1> [4]
[60]     0.0    0.00    0.00     331         vrpConst::vrpConst(vrpConst const&) [60]
-----------------------------------------------
                                   2             vrpRoute::Serialize(edaBuffer&, bool) <cycle 1> [44]
                                   3             vrpProblem::printTable(char const*) <cycle 1> [4]
                0.00    0.00       1/875         _init [15]
                0.00    0.00       1/875         vrpSolution::~vrpSolution() [35]
                0.00    0.00       1/875         vrpSolution::Serialize(edaBuffer&, bool) [12]
                0.00    0.00       1/875         std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
                0.00    0.00       2/875         vrpInterchangeNext::getClassID() const [24]
                0.00    0.00       3/875         vrpInterchangeRand::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) [13]
                0.00    0.00     165/875         vrpProblem::Serialize(edaBuffer&, bool) [8]
[61]     0.0    0.00    0.00     179         vrpInterchangeNext::generate(edaMove*, edaSolution const&) <cycle 1> [61]
                0.00    0.00     166/334         edaSimpleMoveTabuList::Serialize(edaBuffer&, bool) [59]
                0.00    0.00       2/2           edaTabuList::getClassID() const [100]
                0.00    0.00       2/145         vrpInterchangeMove::Serialize(edaBuffer&, bool) [68]
                0.00    0.00       2/11          vrpInterchangeMove::init(edaSolution const&) [73]
                                   5             vrpInterchangeNext::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) <cycle 1> [16]
-----------------------------------------------
                                   2             vrpSolution::writeCSVFile(char const*) const <cycle 1> [62]
                                   1             vrpInterchangeNext::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) <cycle 1> [16]
                                   4             vrpRoute::Serialize(edaBuffer&, bool) <cycle 1> [44]
                0.00    0.00       2/875         vrpSolution::Serialize(edaBuffer&, bool) [12]
                0.00    0.00     167/875         vrpSolution::detail() const [6]
[62]     0.0    0.00    0.00     174+2       vrpSolution::writeCSVFile(char const*) const <cycle 1> [62]
                0.00    0.00       2/145         vrpInterchangeMove::Serialize(edaBuffer&, bool) [68]
                0.00    0.00       2/11          vrpInterchangeMove::init(edaSolution const&) [73]
                0.00    0.00       2/14          vrpRoute::getClassID() const [72]
                                   2             vrpRoute::Serialize(edaBuffer&, bool) <cycle 1> [44]
                                   2             vrpSolution::getRandomFirstStop(vrpStop*, double) const <cycle 1> [74]
                                   2             vrpSolution::writeCSVFile(char const*) const <cycle 1> [62]
-----------------------------------------------
                                   5             vrpSolution::getRandomFirstStop(vrpStop*, double) const <cycle 1> [74]
                0.00    0.00     166/875         vrpProblem::getStop(unsigned int) const [5]
[63]     0.0    0.00    0.00     171         vrpRouteMove::~vrpRouteMove() <cycle 1> [63]
                                 171             vrpRouteMove::Serialize(edaBuffer&, bool) <cycle 1> [38]
-----------------------------------------------
                0.00    0.00       1/168         global constructors keyed to main [211]
                0.00    0.00       1/168         vrpInterchangeRand::generate(edaMove*, edaSolution const&) [448]
                0.00    0.00       1/168         vrpProblem::printTable(char const*) <cycle 1> [4]
                0.00    0.00     165/168         vrpProblem::vrpProblem(vrpProblem const&) [226]
[64]     0.0    0.00    0.00     168         vrpSolution::improveLandfill() [64]
-----------------------------------------------
                0.00    0.00       1/168         vrpSolution::createSubRoute(vrpStop*, double, double) [18]
                0.00    0.00       1/168         vrpSolution::getNextStop(vrpSubRoute&, unsigned int&) const [23]
                0.00    0.00     166/168         vrpInterchangeRand::generate(edaMove*, edaSolution const&) [448]
[65]     0.0    0.00    0.00     168         vrpGroupConflict::vrpGroupConflict(unsigned int) [65]
-----------------------------------------------
                0.00    0.00     165/165         vrpProblem::printTable(char const*) <cycle 1> [4]
[66]     0.0    0.00    0.00     165         vrpConst::clone() const [66]
-----------------------------------------------
                0.00    0.00       2/156         vrpRouteMove::update(edaSolution&) const <cycle 1> [48]
                0.00    0.00       2/156         vrpInterchangeNext::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) <cycle 1> [16]
                0.00    0.00       2/156         vrpRepresentation::Serialize(edaBuffer&, bool) [424]
                0.00    0.00       4/156         vrpSubRouteMove::printOn(std::ostream&) const [1]
                0.00    0.00       4/156         vrpRoute::Serialize(edaBuffer&, bool) <cycle 1> [44]
                0.00    0.00       9/156         vrpSubRouteNext::getClassID() const [761]
                0.00    0.00     133/156         vrpInterchangeMove::operator=(edaMove const&) [70]
[67]     0.0    0.00    0.00     156         vrpSubRouteNext::generate(edaMove*, edaSolution const&) [67]
-----------------------------------------------
                0.00    0.00       1/145         std::list<edaMove*, std::allocator<edaMove*> >::erase(std::_List_iterator<edaMove*>) [867]
                0.00    0.00       2/145         vrpInterchangeNext::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) <cycle 1> [16]
                0.00    0.00       2/145         vrpInterchangeNext::generate(edaMove*, edaSolution const&) <cycle 1> [61]
                0.00    0.00       2/145         vrpSolution::writeCSVFile(char const*) const <cycle 1> [62]
                0.00    0.00       3/145         vrpInterchangeMove::~vrpInterchangeMove() [76]
                0.00    0.00       5/145         vrpRepresentation::init(edaSolutionList const&, edaPopulation&) const [77]
                0.00    0.00       8/145         vrpSubRouteMove::incrEval(edaSolution const&) const [75]
                0.00    0.00      14/145         vrpRoute::Serialize(edaBuffer&, bool) <cycle 1> [44]
                0.00    0.00     108/145         vrpRouteMove::update(edaSolution&) const <cycle 1> [48]
[68]     0.0    0.00    0.00     145         vrpInterchangeMove::Serialize(edaBuffer&, bool) [68]
                0.00    0.00     142/143         vrpInterchangeMove::operator==(edaMove const&) const [69]
-----------------------------------------------
                0.00    0.00       1/143         vrpRepresentation::init(edaSolutionList const&, edaPopulation&) const [77]
                0.00    0.00     142/143         vrpInterchangeMove::Serialize(edaBuffer&, bool) [68]
[69]     0.0    0.00    0.00     143         vrpInterchangeMove::operator==(edaMove const&) const [69]
-----------------------------------------------
                0.00    0.00       1/122         vrpRepresentation::encode(edaSolutionList const&, edaPopulation&) const [90]
                0.00    0.00       3/122         vrpRepresentation::Serialize(edaBuffer&, bool) [424]
                0.00    0.00      14/122         vrpSolution::vrpSolution() [253]
                0.00    0.00     104/122         vrpRouteMove::update(edaSolution&) const <cycle 1> [48]
[70]     0.0    0.00    0.00     122         vrpInterchangeMove::operator=(edaMove const&) [70]
                0.00    0.00     133/156         vrpSubRouteNext::generate(edaMove*, edaSolution const&) [67]
-----------------------------------------------
                0.00    0.00       1/58          vrpInterchangeNext::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) <cycle 1> [16]
                0.00    0.00       1/58          vrpSubRoute::~vrpSubRoute() [273]
                0.00    0.00       1/58          vrpSubRoute::~vrpSubRoute() [272]
                0.00    0.00       1/58          std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
                0.00    0.00       2/58          vrpSubRoute::getComingTime(unsigned int) const [101]
                0.00    0.00      52/58          vrpGroupConflict::isConflict(unsigned int, std::vector<unsigned int, std::allocator<unsigned int> > const&) const [40]
[71]     0.0    0.00    0.00      58         edaSA::search(edaSolutionList&) [71]
-----------------------------------------------
                0.00    0.00       1/14          main <cycle 1> [41]
                0.00    0.00       1/14          global constructors keyed to _ZN8vrpConstC2ENS_4TYPEE [33]
                0.00    0.00       1/14          vrpInterchangeRand::clone() const [91]
                0.00    0.00       1/14          std::vector<vrpRoute*, std::allocator<vrpRoute*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<vrpRoute**, std::vector<vrpRoute*, std::allocator<vrpRoute*> > >, vrpRoute* const&) [26]
                0.00    0.00       1/14          edaWrapperControl::checkLoopStatus(int) [17]
                0.00    0.00       1/14          std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::_M_lower_bound(std::_Rb_tree_node<std::pair<int const, int> > const*, std::_Rb_tree_node<std::pair<int const, int> > const*, int const&) const [141]
                0.00    0.00       2/14          vrpRouteMove::update(edaSolution&) const <cycle 1> [48]
                0.00    0.00       2/14          vrpInterchangeRand::Serialize(edaBuffer&, bool) <cycle 1> [97]
                0.00    0.00       2/14          vrpProblem::printTable(char const*) <cycle 1> [4]
                0.00    0.00       2/14          vrpSolution::writeCSVFile(char const*) const <cycle 1> [62]
[72]     0.0    0.00    0.00      14         vrpRoute::getClassID() const [72]
-----------------------------------------------
                0.00    0.00       1/11          std::list<edaMove*, std::allocator<edaMove*> >::erase(std::_List_iterator<edaMove*>) [867]
                0.00    0.00       2/11          vrpRouteMove::update(edaSolution&) const <cycle 1> [48]
                0.00    0.00       2/11          vrpInterchangeNext::generate(edaMove*, edaSolution const&) <cycle 1> [61]
                0.00    0.00       2/11          vrpSolution::writeCSVFile(char const*) const <cycle 1> [62]
                0.00    0.00       4/11          vrpSubRouteMove::printOn(std::ostream&) const [1]
[73]     0.0    0.00    0.00      11         vrpInterchangeMove::init(edaSolution const&) [73]
-----------------------------------------------
                                   4             vrpSolution::getRandomFirstStop(vrpStop*, double) const <cycle 1> [74]
                                   2             vrpSolution::writeCSVFile(char const*) const <cycle 1> [62]
                0.00    0.00       1/875         userClassGenerate(int) [14]
                0.00    0.00       1/875         vrpSolution::getNextStop(vrpSubRoute&, unsigned int&) const [23]
                0.00    0.00       1/875         std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
                0.00    0.00       3/875         vrpSolution::createSubRoute(vrpStop*, double, double) [18]
[74]     0.0    0.00    0.00       8+4       vrpSolution::getRandomFirstStop(vrpStop*, double) const <cycle 1> [74]
                                   5             vrpRouteMove::~vrpRouteMove() <cycle 1> [63]
                                   4             vrpSolution::getRandomFirstStop(vrpStop*, double) const <cycle 1> [74]
-----------------------------------------------
                0.00    0.00       4/8           vrpRoute::Serialize(edaBuffer&, bool) <cycle 1> [44]
                0.00    0.00       4/8           vrpSolution::Serialize(edaBuffer&, bool) [12]
[75]     0.0    0.00    0.00       8         vrpSubRouteMove::incrEval(edaSolution const&) const [75]
                0.00    0.00       8/145         vrpInterchangeMove::Serialize(edaBuffer&, bool) [68]
                0.00    0.00       4/186455      vrpSubRouteMove::Serialize(edaBuffer&, bool) [56]
-----------------------------------------------
                0.00    0.00       1/6           std::vector<edaChromosome*, std::allocator<edaChromosome*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, edaChromosome* const&) [42]
                0.00    0.00       2/6           std::vector<vrpRoute*, std::allocator<vrpRoute*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<vrpRoute**, std::vector<vrpRoute*, std::allocator<vrpRoute*> > >, vrpRoute* const&) [26]
                0.00    0.00       3/6           vrpRepresentation::decode(edaChromosome const*, edaSolution*) const [19]
[76]     0.0    0.00    0.00       6         vrpInterchangeMove::~vrpInterchangeMove() [76]
                0.00    0.00       3/145         vrpInterchangeMove::Serialize(edaBuffer&, bool) [68]
-----------------------------------------------
                0.00    0.00       1/6           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
                0.00    0.00       2/6           vrpInterchangeRand::Serialize(edaBuffer&, bool) <cycle 1> [97]
                0.00    0.00       3/6           vrpInterchangeRand::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) [13]
[77]     0.0    0.00    0.00       6         vrpRepresentation::init(edaSolutionList const&, edaPopulation&) const [77]
                0.00    0.00       5/145         vrpInterchangeMove::Serialize(edaBuffer&, bool) [68]
                0.00    0.00       1/143         vrpInterchangeMove::operator==(edaMove const&) const [69]
-----------------------------------------------
                0.00    0.00       1/5           vrpSubRoute::~vrpSubRoute() [273]
                0.00    0.00       2/5           vrpSubRoute::canInsert(vrpStop*, unsigned int) const [45]
                0.00    0.00       2/5           vrpSubRoute::update() [47]
[78]     0.0    0.00    0.00       5         edaSA::edaSA(edaMove*, edaMoveGen*, edaContinue*, double, edaCoolingSchedule*, int, int) [78]
-----------------------------------------------
                0.00    0.00       1/5           _init [15]
                0.00    0.00       2/5           vrpRoute::Serialize(edaBuffer&, bool) <cycle 1> [44]
                0.00    0.00       2/5           vrpSolution::Serialize(edaBuffer&, bool) [12]
[79]     0.0    0.00    0.00       5         vrpRouteMove::printOn(std::ostream&) const [79]
                0.00    0.00       1/336         vrpSubRouteMove::update(edaSolution&) const [58]
-----------------------------------------------
                                   1             edaPopulation::min() const [80]
                0.00    0.00       1/5           edaBuffer::UnPack(short*, int) [649]
                0.00    0.00       1/5           edaBuffer::UnPack(long*, int) [647]
                0.00    0.00       1/5           edaBuffer::UnPack(unsigned int*, int) [646]
                0.00    0.00       1/5           edaBuffer::UnPack(bool*, int) [641]
                0.00    0.00       1/5           edaPopulation::edaPopulation(edaPopulation const&) [95]
[80]     0.0    0.00    0.00       5+1       edaPopulation::min() const [80]
                                   1             edaPopulation::min() const [80]
-----------------------------------------------
                                   2             edaPopulation::printOn(std::ostream&) const [81]
                0.00    0.00       1/5           edaGenne::~edaGenne() [605]
                0.00    0.00       1/5           edaGenne::~edaGenne() [604]
                0.00    0.00       1/5           operator<<(std::ostream&, edaPopulation const&) [965]
                0.00    0.00       2/5           vrpSubRoute::update() [47]
[81]     0.0    0.00    0.00       5+2       edaPopulation::printOn(std::ostream&) const [81]
                                   2             edaPopulation::printOn(std::ostream&) const [81]
-----------------------------------------------
                0.00    0.00       1/4           _init [15]
                0.00    0.00       1/4           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
                0.00    0.00       2/4           vrpSolution::vrpSolution(vrpProblem*) [30]
[82]     0.0    0.00    0.00       4         vrpSolution::getBestFirstStop(vrpStop*, double) const [82]
                0.00    0.00     168/337         vrpGroupConflict::isConflict(std::vector<unsigned int, std::allocator<unsigned int> > const&) const [57]
-----------------------------------------------
                0.00    0.00       1/4           vrpRoute::Serialize(edaBuffer&, bool) <cycle 1> [44]
                0.00    0.00       3/4           vrpInterchangeRand::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) [13]
[83]     0.0    0.00    0.00       4         std::vector<vrpRoute*, std::allocator<vrpRoute*> >::at(unsigned int) [83]
-----------------------------------------------
                0.00    0.00       1/4           vrpRepresentation::decode(edaChromosome const*, edaSolution*) const [19]
                0.00    0.00       1/4           std::vector<vrpSubRoute*, std::allocator<vrpSubRoute*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<vrpSubRoute**, std::vector<vrpSubRoute*, std::allocator<vrpSubRoute*> > >, vrpSubRoute* const&) [103]
                0.00    0.00       1/4           vrpRoute::printOn(std::ostream&) const [855]
                0.00    0.00       1/4           vrpSubRoute::vrpSubRoute(vrpSubRoute const&) [46]
[84]     0.0    0.00    0.00       4         std::vector<unsigned int, std::allocator<unsigned int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int const&) [84]
-----------------------------------------------
                0.00    0.00       1/3           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
                0.00    0.00       2/3           edaSolution::printOn(std::ostream&) const [88]
[85]     0.0    0.00    0.00       3         global constructors keyed to _ZNK11edaSolution7printOnERSo [85]
-----------------------------------------------
                0.00    0.00       3/3           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[86]     0.0    0.00    0.00       3         edaWrapperControl::chooseSolution(int, edaSolutionList&) [86]
-----------------------------------------------
                0.00    0.00       1/3           vrpRoute::Serialize(edaBuffer&, bool) <cycle 1> [44]
                0.00    0.00       1/3           vrpSolution::Serialize(edaBuffer&, bool) [12]
                0.00    0.00       1/3           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[87]     0.0    0.00    0.00       3         vrpConst::operator=(vrpConst const&) [87]
-----------------------------------------------
                0.00    0.00       1/3           vrpSubRoute::Serialize(edaBuffer&, bool) [28]
                0.00    0.00       1/3           vrpSubRoute::vrpSubRoute(vrpSubRoute const&) [46]
                0.00    0.00       1/3           vrpGenne::printOn(std::ostream&) const [844]
[88]     0.0    0.00    0.00       3         edaSolution::printOn(std::ostream&) const [88]
                0.00    0.00       2/3           global constructors keyed to _ZNK11edaSolution7printOnERSo [85]
                0.00    0.00       1/3           std::_List_base<edaSolution*, std::allocator<edaSolution*> >::_M_clear() [92]
-----------------------------------------------
                0.00    0.00       1/3           vrpSubRoute::operator=(vrpSubRoute const&) [29]
                0.00    0.00       1/3           vrpSubRoute::vrpSubRoute(vrpSubRoute const&) [46]
                0.00    0.00       1/3           vrpSubRoute::pushStop(vrpStop*) [268]
[89]     0.0    0.00    0.00       3         edaPopulation::std() const [89]
                0.00    0.00       1/2           edaPopulation::mean() const [102]
-----------------------------------------------
                0.00    0.00       3/3           vrpInterchangeRand::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) [13]
[90]     0.0    0.00    0.00       3         vrpRepresentation::encode(edaSolutionList const&, edaPopulation&) const [90]
                0.00    0.00       1/122         vrpInterchangeMove::operator=(edaMove const&) [70]
-----------------------------------------------
                0.00    0.00       1/3           userClassGenerate(int) [14]
                0.00    0.00       2/3           vrpInterchangeRand::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) [13]
[91]     0.0    0.00    0.00       3         vrpInterchangeRand::clone() const [91]
                0.00    0.00       1/14          vrpRoute::getClassID() const [72]
-----------------------------------------------
                0.00    0.00       1/3           vrpSubRoute::Serialize(edaBuffer&, bool) [28]
                0.00    0.00       1/3           vrpSubRoute::debug(std::ostream&) [265]
                0.00    0.00       1/3           edaSolution::printOn(std::ostream&) const [88]
[92]     0.0    0.00    0.00       3         std::_List_base<edaSolution*, std::allocator<edaSolution*> >::_M_clear() [92]
-----------------------------------------------
                0.00    0.00       2/2           vrpRouteMove::update(edaSolution&) const <cycle 1> [48]
[93]     0.0    0.00    0.00       2         vrpRouteNext::vrpRouteNext() [93]
-----------------------------------------------
                0.00    0.00       1/2           void std::__adjust_heap<__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, int, edaChromosome*, bool (*)(edaChromosome*, edaChromosome*)>(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, int, int, edaChromosome*, bool (*)(edaChromosome*, edaChromosome*)) [145]
                0.00    0.00       1/2           void std::__introsort_loop<__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, int, bool (*)(edaChromosome*, edaChromosome*)>(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, __gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, int, bool (*)(edaChromosome*, edaChromosome*)) [147]
[94]     0.0    0.00    0.00       2         edaPopulation::Serialize(edaBuffer&, bool) [94]
-----------------------------------------------
                                   1             edaPopulation::edaPopulation(edaPopulation const&) [95]
                0.00    0.00       1/2           edaBuffer::UnPack(unsigned char*, int) [644]
                0.00    0.00       1/2           edaBuffer::Pack(char const*, int) [127]
[95]     0.0    0.00    0.00       2+1       edaPopulation::edaPopulation(edaPopulation const&) [95]
                0.00    0.00       1/5           edaPopulation::min() const [80]
                                   1             edaPopulation::edaPopulation(edaPopulation const&) [95]
-----------------------------------------------
                0.00    0.00       2/2           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[96]     0.0    0.00    0.00       2         edaWrapperControl::insertLoop(int, int, edaContinue const&) [96]
-----------------------------------------------
                                   1             vrpRoute::Serialize(edaBuffer&, bool) <cycle 1> [44]
                0.00    0.00       1/875         vrpSolution::Serialize(edaBuffer&, bool) [12]
[97]     0.0    0.00    0.00       2         vrpInterchangeRand::Serialize(edaBuffer&, bool) <cycle 1> [97]
                0.00    0.00       2/6           vrpRepresentation::init(edaSolutionList const&, edaPopulation&) const [77]
                0.00    0.00       2/14          vrpRoute::getClassID() const [72]
                                   3             vrpRoute::Serialize(edaBuffer&, bool) <cycle 1> [44]
-----------------------------------------------
                0.00    0.00       2/2           vrpSubRoute::update() [47]
[98]     0.0    0.00    0.00       2         edaSimpleSolutionTabuList::check(edaMove const*, edaSolution const*) [98]
-----------------------------------------------
                0.00    0.00       2/2           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[99]     0.0    0.00    0.00       2         edaTS::search(edaSolutionList&) [99]
-----------------------------------------------
                0.00    0.00       2/2           vrpInterchangeNext::generate(edaMove*, edaSolution const&) <cycle 1> [61]
[100]    0.0    0.00    0.00       2         edaTabuList::getClassID() const [100]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<edaChromosome*, std::allocator<edaChromosome*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, edaChromosome* const&) [42]
[101]    0.0    0.00    0.00       2         vrpSubRoute::getComingTime(unsigned int) const [101]
                0.00    0.00       2/58          edaSA::search(edaSolutionList&) [71]
-----------------------------------------------
                0.00    0.00       1/2           vrpSubRoute::operator=(edaSolution const&) [274]
                0.00    0.00       1/2           edaPopulation::std() const [89]
[102]    0.0    0.00    0.00       2         edaPopulation::mean() const [102]
                0.00    0.00       1/1           edaPopulation::~edaPopulation() [111]
-----------------------------------------------
                0.00    0.00       1/2           vrpRoute::~vrpRoute() [126]
                0.00    0.00       1/2           vrpRoute::getTotalWaitTime() const [851]
[103]    0.0    0.00    0.00       2         std::vector<vrpSubRoute*, std::allocator<vrpSubRoute*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<vrpSubRoute**, std::vector<vrpSubRoute*, std::allocator<vrpSubRoute*> > >, vrpSubRoute* const&) [103]
                0.00    0.00       1/4           std::vector<unsigned int, std::allocator<unsigned int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int const&) [84]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[104]    0.0    0.00    0.00       1         global constructors keyed to _ZN18vrpInterchangeRandC2Ev [104]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[105]    0.0    0.00    0.00       1         global constructors keyed to _ZN21edaSimpleMoveTabuListC2Ev [105]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[106]    0.0    0.00    0.00       1         classGenerateFromBuffer(edaBuffer&) [106]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[107]    0.0    0.00    0.00       1         edaSolution::~edaSolution() [107]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[108]    0.0    0.00    0.00       1         vrpSolution::vrpSolution(vrpSolution const&) [108]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[109]    0.0    0.00    0.00       1         vrpRouteNext::isFeasibleMove(vrpRouteMove*, vrpRoute*) [109]
-----------------------------------------------
                0.00    0.00       1/1           vrpSubRoute::~vrpSubRoute() [273]
[110]    0.0    0.00    0.00       1         edaPopulation::~edaPopulation() [110]
-----------------------------------------------
                0.00    0.00       1/1           edaPopulation::mean() const [102]
[111]    0.0    0.00    0.00       1         edaPopulation::~edaPopulation() [111]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[112]    0.0    0.00    0.00       1         vrpSubRouteMove::vrpSubRouteMove(vrpSubRouteMove const&) [112]
-----------------------------------------------
                0.00    0.00       1/1           _init [15]
[113]    0.0    0.00    0.00       1         vrpSubRouteNext::isFeasibleMove(vrpSubRouteMove*, vrpSubRoute*) [113]
                0.00    0.00       1/186455      vrpSubRouteMove::Serialize(edaBuffer&, bool) [56]
                0.00    0.00       1/336         vrpSubRouteMove::update(edaSolution&) const [58]
-----------------------------------------------
                0.00    0.00       1/1           _init [15]
[114]    0.0    0.00    0.00       1         vrpGroupConflict::vrpGroupConflict() [114]
                0.00    0.00       1/186455      vrpSubRouteMove::Serialize(edaBuffer&, bool) [56]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[115]    0.0    0.00    0.00       1         edaWrapperControl::insertEdge(int, int) [115]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[116]    0.0    0.00    0.00       1         edaWrapperControl::allDone() [116]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[117]    0.0    0.00    0.00       1         vrpInterchangeRand::vrpInterchangeRand(vrpInterchangeRand const&) [117]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[118]    0.0    0.00    0.00       1         edaSimpleMoveTabuList::add(edaMove const*, edaSolution const*) [118]
-----------------------------------------------
                0.00    0.00       1/1           edaBuffer::UnPack(char*, int) [642]
[119]    0.0    0.00    0.00       1         edaSimpleSolutionTabuList::removeSolution(edaSolution const*) [119]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[120]    0.0    0.00    0.00       1         edaSimpleSolutionTabuList::add(edaMove const*, edaSolution const*) [120]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[121]    0.0    0.00    0.00       1         edaSimpleSolutionTabuList::Serialize(edaBuffer&, bool) [121]
-----------------------------------------------
                0.00    0.00       1/1           vrpSubRoute::operator=(vrpSubRoute const&) [29]
[122]    0.0    0.00    0.00       1         edaSimpleSolutionTabuList::edaSimpleSolutionTabuList(unsigned int) [122]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[123]    0.0    0.00    0.00       1         edaTS::easer() [123]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[124]    0.0    0.00    0.00       1         edaTS::edaTS(edaTS const&) [124]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to _ZN8vrpConstC2ENS_4TYPEE [33]
[125]    0.0    0.00    0.00       1         vrpConst::~vrpConst() [125]
-----------------------------------------------
                0.00    0.00       1/1           vrpRoute::getTotalMoveTime() const [140]
[126]    0.0    0.00    0.00       1         vrpRoute::~vrpRoute() [126]
                0.00    0.00       1/2           std::vector<vrpSubRoute*, std::allocator<vrpSubRoute*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<vrpSubRoute**, std::vector<vrpSubRoute*, std::allocator<vrpSubRoute*> > >, vrpSubRoute* const&) [103]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<vrpRoute*, std::allocator<vrpRoute*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<vrpRoute**, std::vector<vrpRoute*, std::allocator<vrpRoute*> > >, vrpRoute* const&) [26]
[127]    0.0    0.00    0.00       1         edaBuffer::Pack(char const*, int) [127]
                0.00    0.00       1/2           edaPopulation::edaPopulation(edaPopulation const&) [95]
                0.00    0.00       1/1           edaPopulation::clone() const [132]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[128]    0.0    0.00    0.00       1         vrpProblem::printOn(std::ostream&) const [128]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[129]    0.0    0.00    0.00       1         vrpSubRoute::getDistance(unsigned int) const [129]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[130]    0.0    0.00    0.00       1         vrpSubRoute::getShapeMetric(unsigned int) const [130]
-----------------------------------------------
                0.00    0.00       1/1           vrpRepresentation::decode(edaChromosome const*, edaSolution*) const [19]
[131]    0.0    0.00    0.00       1         vrpSubRoute::getGroup() const [131]
-----------------------------------------------
                                   1             edaPopulation::clone() const [132]
                0.00    0.00       1/1           edaBuffer::Pack(char const*, int) [127]
[132]    0.0    0.00    0.00       1+1       edaPopulation::clone() const [132]
                                   1             edaPopulation::clone() const [132]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[133]    0.0    0.00    0.00       1         edaWrapperControl::findReadyTask() const [133]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[134]    0.0    0.00    0.00       1         vrpRepresentation::clone() const [134]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[135]    0.0    0.00    0.00       1         vrpRepresentation::encode(edaSolution const*, edaChromosome*) const [135]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<int, std::pair<int const, edaDAGVertex*>, std::_Select1st<std::pair<int const, edaDAGVertex*> >, std::less<int>, std::allocator<std::pair<int const, edaDAGVertex*> > >::find(int const&) [10]
[136]    0.0    0.00    0.00       1         vrpInterchangeMove::printOn(std::ostream&) const [136]
-----------------------------------------------
                0.00    0.00       1/1           vrpSubRoute::vrpSubRoute(vrpSubRoute const&) [46]
[137]    0.0    0.00    0.00       1         vrpRoute::isRedundancy() const [137]
-----------------------------------------------
                0.00    0.00       1/1           vrpSubRoute::vrpSubRoute(vrpSubRoute const&) [46]
[138]    0.0    0.00    0.00       1         vrpRoute::getShapeMetric() const [138]
-----------------------------------------------
                0.00    0.00       1/1           vrpRepresentation::decode(edaPopulation const&, edaSolutionList&) const [780]
[139]    0.0    0.00    0.00       1         vrpRoute::getTotalMoveDist() const [139]
-----------------------------------------------
                0.00    0.00       1/1           vrpRoute::clone() const [852]
[140]    0.0    0.00    0.00       1         vrpRoute::getTotalMoveTime() const [140]
                0.00    0.00       1/1           vrpRoute::~vrpRoute() [126]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::find(int const&) const [142]
[141]    0.0    0.00    0.00       1         std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::_M_lower_bound(std::_Rb_tree_node<std::pair<int const, int> > const*, std::_Rb_tree_node<std::pair<int const, int> > const*, int const&) const [141]
                0.00    0.00       1/14          vrpRoute::getClassID() const [72]
-----------------------------------------------
                0.00    0.00       1/1           edaWrapperControl::checkLoopStatus(int) [17]
[142]    0.0    0.00    0.00       1         std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::find(int const&) const [142]
                0.00    0.00       1/1           std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::_M_lower_bound(std::_Rb_tree_node<std::pair<int const, int> > const*, std::_Rb_tree_node<std::pair<int const, int> > const*, int const&) const [141]
-----------------------------------------------
                0.00    0.00       1/1           userClassGenerate(int) [14]
[143]    0.0    0.00    0.00       1         std::vector<edaSolution*, std::allocator<edaSolution*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<edaSolution**, std::vector<edaSolution*, std::allocator<edaSolution*> > >, edaSolution* const&) [143]
-----------------------------------------------
                0.00    0.00       1/1           void std::__introsort_loop<__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, int, bool (*)(edaChromosome*, edaChromosome*)>(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, __gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, int, bool (*)(edaChromosome*, edaChromosome*)) [147]
[144]    0.0    0.00    0.00       1         void std::__push_heap<__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, int, edaChromosome*, bool (*)(edaChromosome*, edaChromosome*)>(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, int, int, edaChromosome*, bool (*)(edaChromosome*, edaChromosome*)) [144]
-----------------------------------------------
                0.00    0.00       1/1           vrpSubRoute::vrpSubRoute(vrpSubRoute const&) [46]
[145]    0.0    0.00    0.00       1         void std::__adjust_heap<__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, int, edaChromosome*, bool (*)(edaChromosome*, edaChromosome*)>(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, int, int, edaChromosome*, bool (*)(edaChromosome*, edaChromosome*)) [145]
                0.00    0.00       1/2           edaPopulation::Serialize(edaBuffer&, bool) [94]
-----------------------------------------------
                0.00    0.00       1/1           vrpSubRoute::vrpSubRoute(vrpSubRoute const&) [46]
[146]    0.0    0.00    0.00       1         void std::__insertion_sort<__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, bool (*)(edaChromosome*, edaChromosome*)>(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, __gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, bool (*)(edaChromosome*, edaChromosome*)) [146]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<edaChromosome*, std::allocator<edaChromosome*> >::_M_fill_insert(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, unsigned int, edaChromosome* const&) [872]
[147]    0.0    0.00    0.00       1         void std::__introsort_loop<__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, int, bool (*)(edaChromosome*, edaChromosome*)>(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, __gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, int, bool (*)(edaChromosome*, edaChromosome*)) [147]
                0.00    0.00       1/1           void std::__push_heap<__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, int, edaChromosome*, bool (*)(edaChromosome*, edaChromosome*)>(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, int, int, edaChromosome*, bool (*)(edaChromosome*, edaChromosome*)) [144]
                0.00    0.00       1/2           edaPopulation::Serialize(edaBuffer&, bool) [94]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

 [104] global constructors keyed to _ZN18vrpInterchangeRandC2Ev (vrpInterchangeRand.cpp) [13] vrpInterchangeRand::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) [80] edaPopulation::min() const
 [105] global constructors keyed to _ZN21edaSimpleMoveTabuListC2Ev (edaSimpleMoveTabuList.cpp) [97] vrpInterchangeRand::Serialize(edaBuffer&, bool) [89] edaPopulation::std() const
  [85] global constructors keyed to _ZNK11edaSolution7printOnERSo (edaSolution.cpp) [117] vrpInterchangeRand::vrpInterchangeRand(vrpInterchangeRand const&) [102] edaPopulation::mean() const
  [14] userClassGenerate(int) [118] edaSimpleMoveTabuList::add(edaMove const*, edaSolution const*) [132] edaPopulation::clone() const
 [106] classGenerateFromBuffer(edaBuffer&) [59] edaSimpleMoveTabuList::Serialize(edaBuffer&, bool) [81] edaPopulation::printOn(std::ostream&) const
   [4] vrpProblem::printTable(char const*) [119] edaSimpleSolutionTabuList::removeSolution(edaSolution const*) [58] vrpSubRouteMove::update(edaSolution&) const
 [107] edaSolution::~edaSolution() [120] edaSimpleSolutionTabuList::add(edaMove const*, edaSolution const*) [1] vrpSubRouteMove::printOn(std::ostream&) const
  [18] vrpSolution::createSubRoute(vrpStop*, double, double) [98] edaSimpleSolutionTabuList::check(edaMove const*, edaSolution const*) [75] vrpSubRouteMove::incrEval(edaSolution const&) const
  [64] vrpSolution::improveLandfill() [121] edaSimpleSolutionTabuList::Serialize(edaBuffer&, bool) [57] vrpGroupConflict::isConflict(std::vector<unsigned int, std::allocator<unsigned int> > const&) const
  [37] vrpSolution::init()   [122] edaSimpleSolutionTabuList::edaSimpleSolutionTabuList(unsigned int) [133] edaWrapperControl::findReadyTask() const
  [12] vrpSolution::Serialize(edaBuffer&, bool) [71] edaSA::search(edaSolutionList&) [77] vrpRepresentation::init(edaSolutionList const&, edaPopulation&) const
 [108] vrpSolution::vrpSolution(vrpSolution const&) [78] edaSA::edaSA(edaMove*, edaMoveGen*, edaContinue*, double, edaCoolingSchedule*, int, int) [134] vrpRepresentation::clone() const
  [47] vrpSubRoute::update() [123] edaTS::easer()         [19] vrpRepresentation::decode(edaChromosome const*, edaSolution*) const
  [28] vrpSubRoute::Serialize(edaBuffer&, bool) [99] edaTS::search(edaSolutionList&) [135] vrpRepresentation::encode(edaSolution const*, edaChromosome*) const
  [46] vrpSubRoute::vrpSubRoute(vrpSubRoute const&) [124] edaTS::edaTS(edaTS const&) [90] vrpRepresentation::encode(edaSolutionList const&, edaPopulation&) const
  [29] vrpSubRoute::operator=(vrpSubRoute const&) [39] vrpConst::load(char const*) [136] vrpInterchangeMove::printOn(std::ostream&) const
  [38] vrpRouteMove::Serialize(edaBuffer&, bool) [3] vrpConst::Serialize(edaBuffer&, bool) [69] vrpInterchangeMove::operator==(edaMove const&) const
  [63] vrpRouteMove::~vrpRouteMove() [11] vrpConst::vrpConst(vrpConst::TYPE) [91] vrpInterchangeRand::clone() const
 [109] vrpRouteNext::isFeasibleMove(vrpRouteMove*, vrpRoute*) [25] vrpConst::vrpConst(float const*, unsigned int) [66] vrpConst::clone() const
  [93] vrpRouteNext::vrpRouteNext() [60] vrpConst::vrpConst(vrpConst const&) [72] vrpRoute::getClassID() const
  [94] edaPopulation::Serialize(edaBuffer&, bool) [125] vrpConst::~vrpConst() [137] vrpRoute::isRedundancy() const
  [95] edaPopulation::edaPopulation(edaPopulation const&) [87] vrpConst::operator=(vrpConst const&) [138] vrpRoute::getShapeMetric() const
 [110] edaPopulation::~edaPopulation() [32] vrpGenne::Serialize(edaBuffer&, bool) [139] vrpRoute::getTotalMoveDist() const
 [111] edaPopulation::~edaPopulation() [44] vrpRoute::Serialize(edaBuffer&, bool) [140] vrpRoute::getTotalMoveTime() const
  [56] vrpSubRouteMove::Serialize(edaBuffer&, bool) [126] vrpRoute::~vrpRoute() [141] std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::_M_lower_bound(std::_Rb_tree_node<std::pair<int const, int> > const*, std::_Rb_tree_node<std::pair<int const, int> > const*, int const&) const
 [112] vrpSubRouteMove::vrpSubRouteMove(vrpSubRouteMove const&) [127] edaBuffer::Pack(char const*, int) [142] std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::find(int const&) const
 [113] vrpSubRouteNext::isFeasibleMove(vrpSubRouteMove*, vrpSubRoute*) [128] vrpProblem::printOn(std::ostream&) const [92] std::_List_base<edaSolution*, std::allocator<edaSolution*> >::_M_clear()
  [67] vrpSubRouteNext::generate(edaMove*, edaSolution const&) [88] edaSolution::printOn(std::ostream&) const [143] std::vector<edaSolution*, std::allocator<edaSolution*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<edaSolution**, std::vector<edaSolution*, std::allocator<edaSolution*> > >, edaSolution* const&)
  [65] vrpGroupConflict::vrpGroupConflict(unsigned int) [100] edaTabuList::getClassID() const [103] std::vector<vrpSubRoute*, std::allocator<vrpSubRoute*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<vrpSubRoute**, std::vector<vrpSubRoute*, std::allocator<vrpSubRoute*> > >, vrpSubRoute* const&)
 [114] vrpGroupConflict::vrpGroupConflict() [23] vrpSolution::getNextStop(vrpSubRoute&, unsigned int&) const [42] std::vector<edaChromosome*, std::allocator<edaChromosome*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, edaChromosome* const&)
 [115] edaWrapperControl::insertEdge(int, int) [62] vrpSolution::writeCSVFile(char const*) const [83] std::vector<vrpRoute*, std::allocator<vrpRoute*> >::at(unsigned int)
  [96] edaWrapperControl::insertLoop(int, int, edaContinue const&) [82] vrpSolution::getBestFirstStop(vrpStop*, double) const [84] std::vector<unsigned int, std::allocator<unsigned int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int const&)
  [86] edaWrapperControl::chooseSolution(int, edaSolutionList&) [74] vrpSolution::getRandomFirstStop(vrpStop*, double) const [144] void std::__push_heap<__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, int, edaChromosome*, bool (*)(edaChromosome*, edaChromosome*)>(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, int, int, edaChromosome*, bool (*)(edaChromosome*, edaChromosome*))
  [17] edaWrapperControl::checkLoopStatus(int) [51] vrpSolution::debug(std::ostream&) const [145] void std::__adjust_heap<__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, int, edaChromosome*, bool (*)(edaChromosome*, edaChromosome*)>(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, int, int, edaChromosome*, bool (*)(edaChromosome*, edaChromosome*))
 [116] edaWrapperControl::allDone() [6] vrpSolution::detail() const [146] void std::__insertion_sort<__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, bool (*)(edaChromosome*, edaChromosome*)>(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, __gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, bool (*)(edaChromosome*, edaChromosome*))
  [73] vrpInterchangeMove::init(edaSolution const&) [129] vrpSubRoute::getDistance(unsigned int) const [147] void std::__introsort_loop<__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, int, bool (*)(edaChromosome*, edaChromosome*)>(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, __gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, int, bool (*)(edaChromosome*, edaChromosome*))
  [68] vrpInterchangeMove::Serialize(edaBuffer&, bool) [101] vrpSubRoute::getComingTime(unsigned int) const [49] __gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, edaChromosome*, bool (*)(edaChromosome*, edaChromosome*)>(__gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, __gnu_cxx::__normal_iterator<edaChromosome**, std::vector<edaChromosome*, std::allocator<edaChromosome*> > >, edaChromosome*, bool (*)(edaChromosome*, edaChromosome*))
  [76] vrpInterchangeMove::~vrpInterchangeMove() [130] vrpSubRoute::getShapeMetric(unsigned int) const [15] _init
  [70] vrpInterchangeMove::operator=(edaMove const&) [131] vrpSubRoute::getGroup() const [41] main
  [16] vrpInterchangeNext::isFeasibleMove(vrpSolution*, vrpInterchangeMove*) [48] vrpRouteMove::update(edaSolution&) const [2] <cycle 1>
  [61] vrpInterchangeNext::generate(edaMove*, edaSolution const&) [79] vrpRouteMove::printOn(std::ostream&) const
